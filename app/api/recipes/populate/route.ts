import { NextResponse } from 'next/server';
import connectToDatabase from '@/lib/mongodb';
import Recipe from '@/models/Recipe';

// Configuration de l'API Spoonacular
const SPOONACULAR_API_KEY = process.env.SPOONACULAR_API_KEY;
const SPOONACULAR_BASE_URL = 'https://api.spoonacular.com/recipes';

// Fonction pour cr√©er des recettes manuelles
function createManualRecipes() {
  return [
    {
      title: 'Salade M√©diterran√©enne',
      description: 'Une salade fra√Æche et color√©e aux saveurs m√©diterran√©ennes',
      image: 'https://images.unsplash.com/photo-1546793665-c74683f339c1?w=400',
      emoji: 'ü•ó',
      ingredients: [
        { name: 'Tomates cerises', amount: '250', unit: 'g' },
        { name: 'Concombre', amount: '1', unit: 'pi√®ce' },
        { name: 'Olives noires', amount: '100', unit: 'g' },
        { name: 'Feta', amount: '150', unit: 'g' },
        { name: 'Huile d\'olive', amount: '3', unit: 'c.√†.s' },
        { name: 'Basilic frais', amount: '10', unit: 'feuilles' }
      ],
      instructions: [
        'Lavez et coupez les tomates cerises en deux',
        '√âpluchez et coupez le concombre en d√©s',
        '√âgouttez les olives et la feta',
        'M√©langez tous les ingr√©dients dans un saladier',
        'Arrosez d\'huile d\'olive et de basilic cisel√©',
        'Salez et poivrez selon vos go√ªts'
      ],
      prepTime: 15,
      cookTime: 0,
      servings: 4,
      difficulty: 'facile' as const,
      category: 'm√©diterran√©en',
      tags: ['salade', 'l√©gumes', 'frais', 'sant√©'],
      nutrition: { calories: 180, protein: 8, carbs: 12, fat: 12 },
      source: 'manual' as const
    },
    {
      title: 'P√¢tes au Pesto',
      description: 'Des p√¢tes parfum√©es au basilic frais et aux pignons de pin',
      image: 'https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?w=400',
      emoji: 'üçù',
      ingredients: [
        { name: 'P√¢tes penne', amount: '400', unit: 'g' },
        { name: 'Basilic frais', amount: '50', unit: 'g' },
        { name: 'Pignons de pin', amount: '30', unit: 'g' },
        { name: 'Parmesan r√¢p√©', amount: '80', unit: 'g' },
        { name: 'Ail', amount: '2', unit: 'gousses' },
        { name: 'Huile d\'olive', amount: '100', unit: 'ml' }
      ],
      instructions: [
        'Faites cuire les p√¢tes selon les instructions du paquet',
        'Pr√©parez le pesto en mixant basilic, pignons, ail et parmesan',
        'Ajoutez l\'huile d\'olive progressivement',
        '√âgouttez les p√¢tes et m√©langez avec le pesto',
        'Servez chaud avec du parmesan r√¢p√©'
      ],
      prepTime: 20,
      cookTime: 15,
      servings: 4,
      difficulty: 'facile' as const,
      category: 'italien',
      tags: ['p√¢tes', 'basilic', 'v√©g√©tarien'],
      nutrition: { calories: 450, protein: 18, carbs: 65, fat: 15 },
      source: 'manual' as const
    },
    {
      title: 'Saumon Grill√© aux Herbes',
      description: 'Filet de saumon parfum√© aux herbes de Provence',
      image: 'https://images.unsplash.com/photo-1467003909585-2f8a72700288?w=400',
      emoji: 'üêü',
      ingredients: [
        { name: 'Filet de saumon', amount: '600', unit: 'g' },
        { name: 'Citron', amount: '1', unit: 'pi√®ce' },
        { name: 'Herbes de Provence', amount: '2', unit: 'c.√†.s' },
        { name: 'Brocolis', amount: '400', unit: 'g' },
        { name: 'Huile d\'olive', amount: '3', unit: 'c.√†.s' },
        { name: 'Ail', amount: '2', unit: 'gousses' }
      ],
      instructions: [
        'Pr√©chauffez le four √† 200¬∞C',
        'Badigeonnez le saumon d\'huile d\'olive',
        'Salez, poivrez et saupoudrez d\'herbes de Provence',
        'Faites cuire 15-20 minutes au four',
        'Faites cuire les brocolis √† la vapeur',
        'Servez avec des quartiers de citron'
      ],
      prepTime: 15,
      cookTime: 25,
      servings: 4,
      difficulty: 'moyen' as const,
      category: 'fran√ßais',
      tags: ['poisson', 'sant√©', 'prot√©ines'],
      nutrition: { calories: 320, protein: 35, carbs: 8, fat: 18 },
      source: 'manual' as const
    }
  ];
}

// POST - Peupler la base de donn√©es avec des recettes
export async function POST(req: Request) {
  try {
    console.log('D√©but de la population des recettes...');
    
    await connectToDatabase();
    
    // V√©rifier si des recettes existent d√©j√†
    const existingCount = await Recipe.countDocuments();
    console.log(`${existingCount} recettes existent d√©j√†.`);
    
    let totalAdded = 0;

    // Ajouter des recettes manuelles
    const manualRecipes = createManualRecipes();
    for (const recipeData of manualRecipes) {
      const existing = await Recipe.findOne({ title: recipeData.title });
      if (!existing) {
        const newRecipe = new Recipe(recipeData);
        await newRecipe.save();
        totalAdded++;
        console.log(`Recette manuelle ajout√©e: ${recipeData.title}`);
      }
    }

    console.log(`\n‚úÖ Population termin√©e ! ${totalAdded} nouvelles recettes ajout√©es.`);
    console.log(`Total de recettes dans la base: ${await Recipe.countDocuments()}`);

    return NextResponse.json({
      success: true,
      message: `Population des recettes termin√©e avec succ√®s. ${totalAdded} nouvelles recettes ajout√©es.`,
      totalRecipes: await Recipe.countDocuments()
    });

  } catch (error) {
    console.error('Erreur lors de la population des recettes:', error);
    return NextResponse.json({ 
      message: 'Erreur lors de la population des recettes',
      error: error instanceof Error ? error.message : 'Erreur inconnue'
    }, { status: 500 });
  }
}
